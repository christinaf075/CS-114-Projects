import math
import check
def small_logs(n:float) -> float:
    """Calculate and return the natural log of a number n that is between 0.0 and 2.0."""
    i = 0
    p = 0
    series_term = 1
    estimate = 0
    while abs(series_term) > 0.00001:
        series_term = ((-1)**p*(1/(i+1))*(n-1)**(i+1))
        i = i+1
        p = p+1
        estimate = estimate + series_term
    return estimate
def natural_log(n:float) -> float:
    """Calculate the natural log of a number n using the product rule and power rule of natural log and the Taylor Series."""
    if n >2.0:
        count = 0
        quotient = n
        while quotient >2.0:
            quotient = quotient/math.e
            count = count+1
        less_than_2_quotient = quotient
        small_result = small_logs(less_than_2_quotient)
        return count + small_result
    elif 0.0<=n<=2.0:
        smaller_result = small_logs(n)
        return smaller_result   

check.within("lessthan2test1", small_logs(1.5), math.log(1.5), 0.0001)
check.within("lessthan2test2", small_logs(0.25), math.log(0.25), 0.0001)
check.within("ln(100.0)", natural_log(100.0), math.log(100.0), 0.0001)
check.within("ln(3.0)", natural_log(3.0), math.log(3.0), 0.0001)
check.within("ln(2.0)", natural_log(2.0), math.log(2.0), 0.0001)
check.within("ln(0.5)", natural_log(0.5), math.log(0.5), 0.0001)
check.within("greaterthan2test1", natural_log(181.2), math.log(181.2), 0.0001)
check.within("greaterthan2test2", natural_log(88.9), math.log(88.9), 0.0001)
check.within("lessthan2", natural_log(1.74), math.log(1.74), 0.0001)
